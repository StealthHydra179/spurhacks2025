-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.accounts
(
    id serial NOT NULL,
    plaid_account_id character varying COLLATE pg_catalog."default",
    plaid_user_id integer,
    balance double precision,
    available_balance double precision,
    currency_code character varying(3) COLLATE pg_catalog."default",
    name character varying COLLATE pg_catalog."default",
    official_name character varying COLLATE pg_catalog."default",
    account_type character varying COLLATE pg_catalog."default",
    account_subtype character varying COLLATE pg_catalog."default",
    mask character varying(4) COLLATE pg_catalog."default",
    update_time timestamp without time zone,
    CONSTRAINT accounts_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.bot_conversations
(
    id serial NOT NULL,
    user_id integer,
    summary character varying COLLATE pg_catalog."default",
    create_timestamp timestamp without time zone,
    CONSTRAINT bot_conversations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.budgets
(
    id serial NOT NULL,
    user_id integer,
    overall double precision,
    housing double precision,
    food double precision,
    transportation double precision,
    health double precision,
    personal double precision,
    entertainment double precision,
    financial double precision,
    gifts double precision,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT budgets_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.conversation_message
(
    id serial NOT NULL,
    conversation_id integer,
    message character varying COLLATE pg_catalog."default",
    message_number integer,
    sender character varying COLLATE pg_catalog."default",
    message_timestamp timestamp without time zone,
    CONSTRAINT conversation_message_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.plaid_users
(
    id serial NOT NULL,
    user_id integer,
    access_token character varying COLLATE pg_catalog."default",
    CONSTRAINT plaid_users_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.savings_goals
(
    id serial NOT NULL,
    user_id integer,
    title character varying COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    amount numeric,
    current_amount numeric DEFAULT 0.00,
    deadline timestamp without time zone,
    category character varying COLLATE pg_catalog."default",
    priority character varying COLLATE pg_catalog."default",
    icon character varying COLLATE pg_catalog."default",
    color character varying COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT savings_goals_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    email character varying COLLATE pg_catalog."default",
    username character varying COLLATE pg_catalog."default",
    hashed_password character varying COLLATE pg_catalog."default",
    mode integer,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.accounts
    ADD CONSTRAINT accounts_plaid_user_id_fkey FOREIGN KEY (plaid_user_id)
    REFERENCES public.plaid_users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.bot_conversations
    ADD CONSTRAINT bot_conversations_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.budgets
    ADD CONSTRAINT budgets_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.conversation_message
    ADD CONSTRAINT conversation_message_conversation_id_fkey FOREIGN KEY (conversation_id)
    REFERENCES public.bot_conversations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.plaid_users
    ADD CONSTRAINT plaid_users_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.savings_goals
    ADD CONSTRAINT savings_goals_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_savings_goals_user_id
    ON public.savings_goals(user_id);

END;